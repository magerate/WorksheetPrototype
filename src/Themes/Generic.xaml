<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:src="clr-namespace:WorksheetPrototype">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ShinyBlue.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <src:ColorBrushConverter x:Key="colorConverter"/>
    <src:PrecisionDoubleConverter x:Key="precisionDoubleConverter"/>
    <src:DoubleBoolConverter x:Key="doubleBoolConverter"/>
    <src:VisibilityBoolConverter x:Key="visibilityConverter"/>
    <src:GridLengthConverter x:Key="gridLengthConverter"/>
    <src:GroupMarginConverter x:Key="marginConverter"/>

    <Style x:Key="materialRect" TargetType="{x:Type Rectangle}">
        <Setter Property="Stroke" Value="Gray"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="4,0,4,0"/>
    </Style>

    <Style x:Key="groupHeaderSeparater" TargetType="{x:Type Separator}">
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="Margin" Value="4,2,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <DataTemplate x:Key="materialTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <Rectangle 
                    Style="{StaticResource materialRect}"
                    Fill="{Binding Path=Name.DisplayColor, Converter={StaticResource colorConverter}}"/>
                <TextBlock Text="{Binding Path=Name.Description}" Margin="4,0,0,0"/>
            </StackPanel>
            <Separator Style="{StaticResource groupHeaderSeparater}"/>
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="groupHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <TextBlock>
                <Run Text="{Binding Path=Name, Mode=OneWay}"/>
                <Run Text="{Binding Path=ItemCount,Mode=OneWay}"/>
                <Run Text="Item(s)"/>
                </TextBlock>
            </StackPanel>
            <Separator Style="{StaticResource groupHeaderSeparater}"/>
        </Grid>
    </DataTemplate>




    <src:GroupHeaderTemplateSelector x:Key="headerSelector" NormalTemplate="{StaticResource groupHeaderTemplate}" MaterialTemplate="{StaticResource materialTemplate}"/>


    <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="True" Header="{Binding}" BorderThickness="0" HorizontalAlignment="Stretch"
                              HeaderTemplateSelector="{StaticResource headerSelector}"
                              Padding="{Binding Converter={StaticResource marginConverter}}">
                        <ItemsPresenter/>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}" x:Key="dataGridCellCommonStyle">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Padding" Value="0,4,0,4"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                        Background="{TemplateBinding Panel.Background}"
                        Padding="{TemplateBinding Control.Padding}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="DataGridColumn.DisplayIndex" Value="0">
                <Setter Property="Margin" Value="32,0,0,0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

   <Style x:Key="amountCell"  TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource dataGridCellCommonStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Profit.Value,Converter={StaticResource doubleBoolConverter}}" Value="True">
                <Setter Property="Background" Value="Coral" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="Background" Value="White" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="AlternatingRowBackground" Value="LightBlue" />
        <Setter Property="CellStyle" Value="{StaticResource dataGridCellCommonStyle}"/>
    </Style>



    <ContextMenu x:Key="columnHeaderMenu">
        <ContextMenu.ItemTemplate>
            <DataTemplate>
                <MenuItem Header="{Binding Path=Header}" 
                          IsCheckable="True" 
                          IsChecked="{Binding Visibility,Converter={StaticResource visibilityConverter}}"/>
            </DataTemplate>
        </ContextMenu.ItemTemplate>
    </ContextMenu>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="ContextMenu" Value="{StaticResource columnHeaderMenu}"/>
    </Style>

</ResourceDictionary>